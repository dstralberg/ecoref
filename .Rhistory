lf90 <- emptystack
lf50 <- emptystack
lf999 <- emptystack
for (i in 2:7) {
f <- as.formula(paste("Refugia ~ ",names(boot)[i],sep=""))
minMax = range(boot[,i])
xVals = seq(minMax[1], minMax[2], len = 100)
nd <- data.frame(lin=xVals,quad=xVals*xVals)
names(nd) <- c(names(boot)[i])
lf.q999 <- rq(f, data=boot, 0.999)
lf.ref999 <- raster::predict(clim7, lf.q999)
lf999 <- addLayer(lf999, lf.ref999)
lf.q <- rq(f, data=boot, 0.99)
lf.ref <- raster::predict(clim7, lf.q)
lf99 <- addLayer(lf99, lf.ref)
lf.q75 <- rq(f, data=boot, 0.75)
lf.ref75 <- raster::predict(clim7, lf.q75)
lf75 <- addLayer(lf75, lf.ref75)
lf.q90 <- rq(f, data=boot, 0.90)
lf.ref90 <- raster::predict(clim7, lf.q90)
lf90 <- addLayer(lf90, lf.ref90)
lf.q50 <- rq(f, data=boot, 0.50)
lf.ref50 <- raster::predict(clim7, lf.q50)
lf50 <- addLayer(lf50, lf.ref50)
}
names(lf50) <- names(lf75) <- names(lf90) <- names(lf99) <- names(lf999) <- names(boot[,2:7])
lf50.b <- raster::which.min(lf50)
lf90.b <- raster::which.min(lf90)
lf99.b <- raster::which.min(lf99)
lf75.b <- raster::which.min(lf75)
lf999.b <- raster::which.min(lf999)
blf50 <- addLayer(blf50, lf50.b)
blf90 <- addLayer(blf90, lf90.b)
blf99 <- addLayer(blf99, lf99.b)
blf75 <- addLayer(blf75, lf75.b)
blf999 <- addLayer(blf999, lf999.b)
}
Mode <- function(x) {
ux <- unique(x)
ux=ux[!is.na(ux)]
ux[which.max(tabulate(match(x, ux)))]
}
Mode_count <- function(x) {
ux <- unique(x)
ux=ux[!is.na(ux)]
mode=ux[which.max(tabulate(match(x, ux)))]
sum(x==mode, na.rm=T)
}
blf50.mode <- ratify(calc(blf50, fun=Mode))
rat <- levels(blf50.mode)[[1]]
rat$names <- c('Temp Mean Annual', 'Temp Warm Month', 'Temp Cold Month', 'Precip Annual', 'Precip Warm Month', 'Moisture Index')
rat$codes <- c('BIO1','BIO10', 'BIO11','BIO12','BIO18','CMI')
levels(blf50.mode) <- rat
blf90.mode <- ratify(calc(blf90, fun=Mode))
levels(blf90.mode) <- rat
blf99.mode <- ratify(calc(blf99, fun=Mode))
levels(blf99.mode) <- rat
blf75.mode <- ratify(calc(blf75, fun=Mode))
levels(blf75.mode) <- rat
mode <- stack(blf50.mode, blf75.mode, blf90.mode, blf99.mode)
mode <- setZ(mode, c(50,75,90,99))
names(mode) <- c("percentile 50", "percentile 75", "percentile 90", "percentile 99")
blf50.freq <- calc(blf50, fun=Mode_count)
blf90.freq <- calc(blf90, fun=Mode_count)
blf99.freq <- calc(blf99, fun=Mode_count)
blf75.freq <- calc(blf75, fun=Mode_count)
freq <- stack(blf50.freq, blf75.freq, blf90.freq, blf99.freq)
freq <- mask(freq,refpass)
freq <- setZ(freq, c(50,75,90,99))
names(freq) <- c("percentile 50", "percentile 75", "percentile 90", "percentile 99")
myTheme=rasterTheme(region=brewer.pal('Set1', n=7))
freqTheme=rasterTheme(region=brewer.pal('YlGnBu',n=5))
freq <- mask(freq,refugia)
freq <- setZ(freq, c(50,75,90,99))
names(freq) <- c("percentile 50", "percentile 75", "percentile 90", "percentile 99")
myTheme=rasterTheme(region=brewer.pal('Set1', n=7))
freqTheme=rasterTheme(region=brewer.pal('YlGnBu',n=5))
?rasterTheme
myTheme=rasterTheme(region=brewer.pal('Set1', n=7))
freqTheme=rasterTheme(region=brewer.pal('YlGnBu',n=5))
plot1 <- levelplot(mode, att='names',scales=list(draw=FALSE), layout=c(4,1), par.settings=myTheme)
par(mar=c(0,0,0,10))
plot2 <- levelplot(freq, scales=list(draw=FALSE), layout=c(4,1), par.settings=freqTheme)
grid.arrange(plot1,plot2, nrow=2)
dev.off()
require(gridExtra)
require(lattice)
myTheme=rasterTheme(region=brewer.pal('Set1', n=7))
freqTheme=rasterTheme(region=brewer.pal('YlGnBu',n=5))
library(quantreg)
library(rasterVis)
myTheme=rasterTheme(region=brewer.pal('Set1', n=7))
plot1 <- levelplot(mode, att='names',scales=list(draw=FALSE), layout=c(5,1), par.settings=myTheme)
par(mar=c(0,0,0,10))
plot2 <- levelplot(freq, scales=list(draw=FALSE), layout=c(5,1), par.settings=freqTheme)
grid.arrange(plot1,plot2, nrow=2)
plot1 <- levelplot(mode, att='names',scales=list(draw=FALSE), layout=c(2,3), par.settings=myTheme, between=list(0,0))
plot1
head(mode)
mode
blf50.mode <- ratify(calc(blf50, fun=Mode))
rat <- levels(blf50.mode)[[1]]
rat$names <- c('Temp Mean Annual', 'Temp Warm Month', 'Temp Cold Month', 'Precip Annual', 'Precip Warm Month', 'Moisture Index')
rat$codes <- c('BIO1','BIO10', 'BIO11','BIO12','BIO18','CMI')
levels(blf50.mode) <- rat
blf90.mode <- ratify(calc(blf90, fun=Mode))
levels(blf90.mode) <- rat
blf99.mode <- ratify(calc(blf99, fun=Mode))
levels(blf99.mode) <- rat
blf999.mode <- ratify(calc(blf999, fun=Mode))
levels(blf999.mode) <- rat
blf75.mode <- ratify(calc(blf75, fun=Mode))
levels(blf75.mode) <- rat
head(boot)
blf999
summary(blf999)
blf99
plot(blf999[[1]])
plot(blf99[[1]])
plot(blf999)
nlayers(blf999)
nlayers(blf99)
blf999.mode
plot(blf999.mode)
plot(blf99.mode)
plot(blf75.mode)
plot(blf50.mode)
plot(blf90.mode)
plot(mode)
plot(blf50)
head(boot)
head(combosamp2)
set.seed(75)
#ecosamp <- sampleStratified(eco2, size=500, exp=10, na.rm=TRUE, xy=TRUE)
ecosamp <- sampleRegular(eco2, size=44000, cells=TRUE, xy=TRUE, na.rm=TRUE)
ecosamp <- na.omit(ecosamp)
ecosamp <- as.data.frame(ecosamp)
nrow(ecosamp)
combosamp <- extract(comboclim, ecosamp[,1:2])
combosamp <- as.data.frame(combosamp)
combosamp <- na.omit(combosamp)
nrow(combosamp)
combosamp$eco_level2 <- as.factor(as.character(combosamp$eco_level2))
combosamp2 <- cbind(eco2 =combosamp[,2],combosamp[,1],combosamp[,3:164])
names(combosamp2)[2] <- "Refugia"
combosamp3 <- combosamp2[,c(2,40,49:51,57,71)]
names(combosamp3) <- c("Refugia","TempAnn","TempWarm","TempCold","PrecipAnn","PrecipWarm","CMI")
combo <- raster::stack(refugia,ecor,topo1)
climfut <- crop(climfut,combo[[1]])
comboclim <- stack(combo, climfut)
clim7 <- dropLayer(climfut,c(2:9,13:17,19:31,33:125))
clim7 <- crop(clim7, refugia)
clim7 <- mask(clim7, refugia)
names(clim7) <- c("TempAnn","TempWarm","TempCold","PrecipAnn","PrecipWarm","CMI")
combosamp3 <- combosamp2[,c(2,17,26:28,34,48)]
names(combosamp3) <- c("Refugia","TempAnn","TempWarm","TempCold","PrecipAnn","PrecipWarm","CMI")
plot(blf999)
plot(blf99)
#5c.
#Finally, calculate limiting factors for each pixel based on bootstrap resampling of quantile regression models,
#and generate raster stacks containing limiting factors (variables yielding minimum predictions) for each quantile value
blf999 <- blf99 <- blf90 <- blf75 <- blf50 <- emptystack
boot <- sample_frac(combosamp3,size=1,replace=TRUE)
lf99 <- emptystack
lf75 <- emptystack
lf90 <- emptystack
lf50 <- emptystack
lf999 <- emptystack
head(boot)
j
for (i in 2:7) {
f <- as.formula(paste("Refugia ~ ",names(boot)[i],sep=""))
minMax = range(boot[,i])
xVals = seq(minMax[1], minMax[2], len = 100)
nd <- data.frame(lin=xVals,quad=xVals*xVals)
names(nd) <- c(names(boot)[i])
lf.q999 <- rq(f, data=boot, 0.999)
lf.ref999 <- raster::predict(clim7, lf.q999)
lf999 <- addLayer(lf999, lf.ref999)
lf.q <- rq(f, data=boot, 0.99)
lf.ref <- raster::predict(clim7, lf.q)
lf99 <- addLayer(lf99, lf.ref)
lf.q75 <- rq(f, data=boot, 0.75)
lf.ref75 <- raster::predict(clim7, lf.q75)
lf75 <- addLayer(lf75, lf.ref75)
lf.q90 <- rq(f, data=boot, 0.90)
lf.ref90 <- raster::predict(clim7, lf.q90)
lf90 <- addLayer(lf90, lf.ref90)
lf.q50 <- rq(f, data=boot, 0.50)
lf.ref50 <- raster::predict(clim7, lf.q50)
lf50 <- addLayer(lf50, lf.ref50)
}
names(lf50) <- names(lf75) <- names(lf90) <- names(lf99) <- names(lf999) <- names(boot[,2:7])
lf50.b <- raster::which.min(lf50)
lf90.b <- raster::which.min(lf90)
lf99.b <- raster::which.min(lf99)
lf75.b <- raster::which.min(lf75)
lf999.b <- raster::which.min(lf999)
blf50 <- addLayer(blf50, lf50.b)
blf90 <- addLayer(blf90, lf90.b)
blf99 <- addLayer(blf99, lf99.b)
blf75 <- addLayer(blf75, lf75.b)
blf999 <- addLayer(blf999, lf999.b)
plot(blf99)
i
lf50
plot(lf50)
names(lf50) <- names(lf75) <- names(lf90) <- names(lf99) <- names(lf999) <- names(boot[,2:7])
lf50.b <- raster::which.min(lf50)
lf90.b <- raster::which.min(lf90)
lf99.b <- raster::which.min(lf99)
lf75.b <- raster::which.min(lf75)
lf999.b <- raster::which.min(lf999)
f
minMax
xVals
nd
plot(lf50.b)
head(boot)
reftree <- raster("K:/NorthAmerica/CFS/Refugia/NAtreerefugiaprev_weighted1_combo_fat50km.tif") #with NA
plot(reftree)
refugia <- reftree
combo <- raster::stack(refugia,ecor,topo1)
climfut <- crop(climfut,combo[[1]])
comboclim <- stack(combo, climfut)
clim7 <- dropLayer(climfut,c(2:9,13:17,19:31,33:125))
clim7 <- crop(clim7, refugia)
clim7 <- mask(clim7, refugia)
names(clim7) <- c("TempAnn","TempWarm","TempCold","PrecipAnn","PrecipWarm","CMI")
combosamp3 <- combosamp2[,c(2,17,26:28,34,48)]
names(combosamp3) <- c("Refugia","TempAnn","TempWarm","TempCold","PrecipAnn","PrecipWarm","CMI")
head(combosamp3)
plot(clim7)
head(combosamp2)
set.seed(999)
ecosamp <- sampleRegular(ecor, size=44000, cells=TRUE, xy=TRUE, na.rm=TRUE)
ecosamp <- na.omit(ecosamp)
ecosamp <- as.data.frame(ecosamp)
combosamp <- extract(comboclim, ecosamp[,1:2])
combosamp <- as.data.frame(combosamp)
combosamp <- na.omit(combosamp)
combosamp2 <- cbind(combosamp[,1],combosamp[,3:140])
comboscale <- scale(combosamp2[,3:139])
comboscale2 <- cbind(combosamp2[,1:2],comboscale)
head(comboscale2)
names(comboscale2)[1] <- "refugia"
head(combosamp2)
names(combosamp2) <- "refugia"
head(combosamp2)
combosamp2 <- cbind(combosamp[,1],combosamp[,3:140])
names(combosamp2)[1] <- "refugia"
head(combosamp2)
comboscale <- scale(combosamp2[,3:139])
comboscale2 <- cbind(combosamp2[,1:2],comboscale)
head(comboscale2)
combo <- raster::stack(refugia,ecor,topo1)
climfut <- crop(climfut,combo[[1]])
comboclim <- stack(combo, climfut)
clim7 <- dropLayer(climfut,c(2:9,13:17,19:31,33:125))
clim7 <- crop(clim7, refugia)
clim7 <- mask(clim7, refugia)
names(clim7) <- c("TempAnn","TempWarm","TempCold","PrecipAnn","PrecipWarm","CMI")
combosamp3 <- combosamp2[,c(2,17,26:28,34,48)]
head(combosamp3)
names(combosamp2)
clim7
clim7 <- dropLayer(climfut,c(2:9,13:17,19:31,33:125))
clim7 <- crop(clim7, refugia)
clim7 <- mask(clim7, refugia)
names(clim7)
names(clim7) <- c("TempAnn","TempWarm","TempCold","PrecipAnn","PrecipWarm","CMI")
head(combosamp2)
names(combosamp2)
combosamp3 <- combosamp2[,c(1,16,25:27,33,47)]
names(combosamp3) <- c("refugia","TempAnn","TempWarm","TempCold","PrecipAnn","PrecipWarm","CMI")
emptystack<-climfut[[1]]
emptystack<-addLayer(emptystack,emptystack)
emptystack<-dropLayer(emptystack,c(1,2))
lf999 <- lf99 <- lf90 <- lf50 <- lf75 <- emptystack
pdf("birdclimplots_6var.pdf")
par(mfrow = c(3, 3))
par(cex = 0.6)
par(mar = c(2, 0, 2, 0), oma = c(4, 4, 0, 0.5))
par(tcl = -0.25)
par(mgp = c(3, 1, 0))
i<-2
plot(combosamp3[,i], combosamp3$refugia, main=names(combosamp3)[i])
f <- as.formula(paste("Refugia ~ ",names(combosamp3)[i],sep=""))
lf.q99 <- rq(f, data=combosamp3, 0.99)
lf.ref99 <- raster::predict(clim7, lf.q99)
lf99 <- addLayer(lf99, lf.ref99)
abline(reg=lf.q99, col="blue")
lf.q999 <- rq(f, data=combosamp3, 0.999)
lf.ref999 <- raster::predict(clim7, lf.q999)
lf999 <- addLayer(lf999, lf.ref999)
abline(reg=lf.q999, col="purple")
lf.q75 <- rq(f, data=combosamp3, 0.75)
lf.ref75 <- raster::predict(clim7, lf.q75)
lf75 <- addLayer(lf75, lf.ref75)
abline(reg=lf.q75, col="orange")
lf.q90 <- rq(f, data=combosamp3, 0.90)
lf.ref90 <- raster::predict(clim7, lf.q90)
lf90 <- addLayer(lf90, lf.ref90)
abline(reg=lf.q90, col="green")
lf.q50 <- rq(f, data=combosamp3, 0.50)
lf.ref50 <- raster::predict(clim7, lf.q50)
lf50 <- addLayer(lf50, lf.ref50)
abline(reg=lf.q50, col="red")
plot(combosamp3[,i], combosamp3$refugia, main=names(combosamp3)[i])
f <- as.formula(paste("refugia ~ ",names(combosamp3)[i],sep=""))
lf.q99 <- rq(f, data=combosamp3, 0.99)
lf.ref99 <- raster::predict(clim7, lf.q99)
lf99 <- addLayer(lf99, lf.ref99)
abline(reg=lf.q99, col="blue")
lf.q999 <- rq(f, data=combosamp3, 0.999)
lf.ref999 <- raster::predict(clim7, lf.q999)
lf999 <- addLayer(lf999, lf.ref999)
abline(reg=lf.q999, col="purple")
lf.q75 <- rq(f, data=combosamp3, 0.75)
lf.ref75 <- raster::predict(clim7, lf.q75)
lf75 <- addLayer(lf75, lf.ref75)
abline(reg=lf.q75, col="orange")
lf.q90 <- rq(f, data=combosamp3, 0.90)
lf.ref90 <- raster::predict(clim7, lf.q90)
lf90 <- addLayer(lf90, lf.ref90)
abline(reg=lf.q90, col="green")
lf.q50 <- rq(f, data=combosamp3, 0.50)
lf.ref50 <- raster::predict(clim7, lf.q50)
lf50 <- addLayer(lf50, lf.ref50)
abline(reg=lf.q50, col="red")
dev.off()
dev.off()
plot(combosamp3[,i], combosamp3$refugia, main=names(combosamp3)[i])
f <- as.formula(paste("refugia ~ ",names(combosamp3)[i],sep=""))
lf.q99 <- rq(f, data=combosamp3, 0.99)
lf.ref99 <- raster::predict(clim7, lf.q99)
lf99 <- addLayer(lf99, lf.ref99)
abline(reg=lf.q99, col="blue")
lf.q999 <- rq(f, data=combosamp3, 0.999)
lf.ref999 <- raster::predict(clim7, lf.q999)
lf999 <- addLayer(lf999, lf.ref999)
abline(reg=lf.q999, col="purple")
lf.q75 <- rq(f, data=combosamp3, 0.75)
lf.ref75 <- raster::predict(clim7, lf.q75)
lf75 <- addLayer(lf75, lf.ref75)
abline(reg=lf.q75, col="orange")
lf.q90 <- rq(f, data=combosamp3, 0.90)
lf.ref90 <- raster::predict(clim7, lf.q90)
lf90 <- addLayer(lf90, lf.ref90)
abline(reg=lf.q90, col="green")
lf.q50 <- rq(f, data=combosamp3, 0.50)
lf.ref50 <- raster::predict(clim7, lf.q50)
lf50 <- addLayer(lf50, lf.ref50)
abline(reg=lf.q50, col="red")
par(mfrow = c(3, 3))
par(cex = 0.6)
par(mar = c(2, 0, 2, 0), oma = c(4, 4, 0, 0.5))
par(tcl = -0.25)
par(mgp = c(3, 1, 0))
for (i in 2:7) {
plot(combosamp3[,i], combosamp3$refugia, main=names(combosamp3)[i])
f <- as.formula(paste("refugia ~ ",names(combosamp3)[i],sep=""))
lf.q99 <- rq(f, data=combosamp3, 0.99)
lf.ref99 <- raster::predict(clim7, lf.q99)
lf99 <- addLayer(lf99, lf.ref99)
abline(reg=lf.q99, col="blue")
lf.q999 <- rq(f, data=combosamp3, 0.999)
lf.ref999 <- raster::predict(clim7, lf.q999)
lf999 <- addLayer(lf999, lf.ref999)
abline(reg=lf.q999, col="purple")
lf.q75 <- rq(f, data=combosamp3, 0.75)
lf.ref75 <- raster::predict(clim7, lf.q75)
lf75 <- addLayer(lf75, lf.ref75)
abline(reg=lf.q75, col="orange")
lf.q90 <- rq(f, data=combosamp3, 0.90)
lf.ref90 <- raster::predict(clim7, lf.q90)
lf90 <- addLayer(lf90, lf.ref90)
abline(reg=lf.q90, col="green")
lf.q50 <- rq(f, data=combosamp3, 0.50)
lf.ref50 <- raster::predict(clim7, lf.q50)
lf50 <- addLayer(lf50, lf.ref50)
abline(reg=lf.q50, col="red")
}
#5c.
#Finally, calculate limiting factors for each pixel based on bootstrap resampling of quantile regression models,
#and generate raster stacks containing limiting factors (variables yielding minimum predictions) for each quantile value
blf999 <- blf99 <- blf90 <- blf75 <- blf50 <- emptystack
for (j in 1:100) {
boot <- sample_frac(combosamp3,size=1,replace=TRUE)
lf99 <- emptystack
lf75 <- emptystack
lf90 <- emptystack
lf50 <- emptystack
lf999 <- emptystack
for (i in 2:7) {
f <- as.formula(paste("refugia ~ ",names(boot)[i],sep=""))
minMax = range(boot[,i])
xVals = seq(minMax[1], minMax[2], len = 100)
nd <- data.frame(lin=xVals,quad=xVals*xVals)
names(nd) <- c(names(boot)[i])
lf.q999 <- rq(f, data=boot, 0.999)
lf.ref999 <- raster::predict(clim7, lf.q999)
lf999 <- addLayer(lf999, lf.ref999)
lf.q <- rq(f, data=boot, 0.99)
lf.ref <- raster::predict(clim7, lf.q)
lf99 <- addLayer(lf99, lf.ref)
lf.q75 <- rq(f, data=boot, 0.75)
lf.ref75 <- raster::predict(clim7, lf.q75)
lf75 <- addLayer(lf75, lf.ref75)
lf.q90 <- rq(f, data=boot, 0.90)
lf.ref90 <- raster::predict(clim7, lf.q90)
lf90 <- addLayer(lf90, lf.ref90)
lf.q50 <- rq(f, data=boot, 0.50)
lf.ref50 <- raster::predict(clim7, lf.q50)
lf50 <- addLayer(lf50, lf.ref50)
}
names(lf50) <- names(lf75) <- names(lf90) <- names(lf99) <- names(lf999) <- names(boot[,2:7])
lf50.b <- raster::which.min(lf50)
lf90.b <- raster::which.min(lf90)
lf99.b <- raster::which.min(lf99)
lf75.b <- raster::which.min(lf75)
lf999.b <- raster::which.min(lf999)
blf50 <- addLayer(blf50, lf50.b)
blf90 <- addLayer(blf90, lf90.b)
blf99 <- addLayer(blf99, lf99.b)
blf75 <- addLayer(blf75, lf75.b)
blf999 <- addLayer(blf999, lf999.b)
}
plot(lf999.b)
dev.off()
dev.off()
plot(lf999.b)
Mode <- function(x) {
ux <- unique(x)
ux=ux[!is.na(ux)]
ux[which.max(tabulate(match(x, ux)))]
}
Mode_count <- function(x) {
ux <- unique(x)
ux=ux[!is.na(ux)]
mode=ux[which.max(tabulate(match(x, ux)))]
sum(x==mode, na.rm=T)
}
blf50.mode <- ratify(calc(blf50, fun=Mode))
rat <- levels(blf50.mode)[[1]]
rat$names <- c('Temp Mean Annual', 'Temp Warm Month', 'Temp Cold Month', 'Precip Annual', 'Precip Warm Month', 'Moisture Index')
rat$codes <- c('BIO1','BIO10', 'BIO11','BIO12','BIO18','CMI')
levels(blf50.mode) <- rat
blf90.mode <- ratify(calc(blf90, fun=Mode))
levels(blf90.mode) <- rat
blf99.mode <- ratify(calc(blf99, fun=Mode))
levels(blf99.mode) <- rat
blf75.mode <- ratify(calc(blf75, fun=Mode))
levels(blf75.mode) <- rat
mode <- stack(blf50.mode, blf75.mode, blf90.mode, blf99.mode)
mode <- setZ(mode, c(50,75,90,99))
names(mode) <- c("percentile 50", "percentile 75", "percentile 90", "percentile 99")
blf50.freq <- calc(blf50, fun=Mode_count)
blf90.freq <- calc(blf90, fun=Mode_count)
blf99.freq <- calc(blf99, fun=Mode_count)
blf75.freq <- calc(blf75, fun=Mode_count)
freq <- stack(blf50.freq, blf75.freq, blf90.freq, blf99.freq)
freq <- mask(freq,refugia)
freq <- setZ(freq, c(50,75,90,99))
names(freq) <- c("percentile 50", "percentile 75", "percentile 90", "percentile 99")
myTheme=rasterTheme(region=brewer.pal('Set1', n=7))
freqTheme=rasterTheme(region=brewer.pal('YlGnBu',n=5))
plot1 <- levelplot(mode, att='names',scales=list(draw=FALSE), layout=c(4,1), par.settings=myTheme)
par(mar=c(0,0,0,10))
plot2 <- levelplot(freq, scales=list(draw=FALSE), layout=c(4,1), par.settings=freqTheme)
grid.arrange(plot1,plot2, nrow=2)
plot1 <- levelplot(mode, att='names',scales=list(draw=FALSE), layout=c(1,4), par.settings=myTheme, between=list(0,0))
plot1
plot1 <- levelplot(mode, att='names',scales=list(draw=FALSE), layout=c(4,1), par.settings=myTheme)
par(mar=c(0,0,0,10))
plot2 <- levelplot(freq, scales=list(draw=FALSE), layout=c(4,1), par.settings=freqTheme)
grid.arrange(plot1,plot2, nrow=2)
plot1 <- levelplot(mode, att='names',scales=list(draw=FALSE), layout=c(1,4), par.settings=myTheme, between=list(0,0))
plot1
myTheme=rasterTheme(region=brewer.pal('Set1', n=6))
freqTheme=rasterTheme(region=brewer.pal('YlGnBu',n=5))
plot1 <- levelplot(mode, att='names',scales=list(draw=FALSE), layout=c(5,1), par.settings=myTheme)
par(mar=c(0,0,0,10))
plot2 <- levelplot(freq, scales=list(draw=FALSE), layout=c(5,1), par.settings=freqTheme)
grid.arrange(plot1,plot2, nrow=2)
plot1 <- levelplot(mode, att='names',scales=list(draw=FALSE), layout=c(2,3), par.settings=myTheme, between=list(0,0))
plot1
plot1 <- levelplot(mode, att='names',scales=list(draw=FALSE), layout=c(2,3), par.settings=myTheme, between=list(0,0))
plot1
base <- rq(refugia ~ 1, data=comboscale2, c(0.50,0.75,0.90,0.99,0.999))
cont <- rq(refugia ~ lat + coastd , data=comboscale2, c(0.50,0.75,0.90,0.99,0.999))
contopreg <- rq(refugia ~ lat + coastd + nscorr2 + tpi81 + tpi25 + tpi9, data=comboscale2, c(0.50,0.75,0.90,0.99,0.999))
contopregland <- rq(refugia ~ lat + coastd + nscorr2 + tpi81  + tpi25 + tpi9+ tpi  + rough + elev , data=comboscale2, c(0.50,0.75,0.90,0.99,0.999))
contop <- rq(refugia ~ lat + coastd + nscorr2 + tpi81 + tpi25 + tpi9 + tpi + rough +  elev + lf1 + lf2 + lf3 + lf4 + facetd, data=comboscale2, c(0.50,0.75,0.90,0.99,0.999))
contopclim <- rq(refugia ~ lat + coastd + nscorr2 + tpi81  + tpi25 + tpi9 + tpi  + rough +  elev+ lf1 + lf2 + lf3 + lf4 + facetd + cmi_sum + bio_01 + bio_02 + bio_10 + bio_11 + bio_12 + bio_18, data=comboscale2, c(0.50,0.75,0.90,0.99,0.999))
#And the remaining separate models:
topreg <- rq(refugia ~ nscorr2 + tpi81 + tpi25 + tpi9, data=comboscale2, c(0.50,0.75,0.90,0.99,0.999))
topland <- rq(refugia ~ tpi + rough +  elev, data=comboscale2, c(0.50,0.75,0.90,0.99,0.999))
toploc <- rq(refugia ~ lf1 + lf2 + lf3 + lf4 + facetd, data=comboscale2, c(0.50,0.75,0.90,0.99,0.999))
clim <- rq(refugia ~ cmi_sum + bio_01 + bio_02 + bio_10 + bio_11 + bio_12 + bio_18, data=comboscale2, c(0.50,0.75,0.90,0.99,0.999))
#Pseudo-R2 values:
contrq <- (1-(cont$rho/base$rho))
contopregrq <- (1-(contopreg$rho/cont$rho))
contopreglandrq <- (1-(contopregland$rho/contopreg$rho))
contoprq <- (1-(contop$rho/contopregland$rho))
contopclimrq <- (1-(contopclim$rho/contop$rho))
topregrq <- 1-(topreg$rho/base$rho)
toplandrq <- 1-(topland$rho/base$rho)
toplocrq <- 1-(toploc$rho/base$rho)
climrq <- 1-(clim$rho/base$rho)
eco <- "I:/GoogleDrive/COBB_ClimateChange/ACE-ECOResubmission/ecoref/"
setwd(eco)
